<?php
	namespace Synapse\Custom\Setup;
	use Magento\Framework\Module\Setup\Migration;
	use Magento\Framework\Setup\UpgradeDataInterface;
	use Magento\Framework\Setup\ModuleContextInterface;
	use Magento\Framework\Setup\ModuleDataSetupInterface;
	use Magento\Catalog\Setup\CategorySetupFactory;
	

	class UpgradeData implements UpgradeDataInterface {
	/**
	* Category setup factory
	*
	* @var CategorySetupFactory
	*/
	private $categorySetupFactory;
	
	protected $logger;
	
	public function __construct(CategorySetupFactory $categorySetupFactory,\Psr\Log\LoggerInterface $logger) {
        $this->categorySetupFactory = $categorySetupFactory;
		$this->logger = $logger;
    }

	/**
	* {@inheritdoc}
	* @SuppressWarnings(PHPMD.ExcessiveMethodLength)
	*/
	public function upgrade(ModuleDataSetupInterface $setup, ModuleContextInterface $context)
	{
		if (version_compare($context->getVersion(), '1.0.2', '<=')) {
		$installer = $setup;
		$installer->startSetup();
		$categorySetup = $this->categorySetupFactory->create(['setup' => $setup]);
		$entityTypeId = $categorySetup->getEntityTypeId(\Magento\Catalog\Model\Category::ENTITY);
		$attributeSetId = $categorySetup->getDefaultAttributeSetId($entityTypeId);
		$categorySetup->removeAttribute(
		\Magento\Catalog\Model\Category::ENTITY, 'allow_for_guest');
		$categorySetup->addAttribute(
		\Magento\Catalog\Model\Category::ENTITY, 'allow_for_guest', [
			'type' => 'int',
			'label' => 'Allow For Guest',
			'input' => 'boolean',
			'source' => 'Magento\Eav\Model\Entity\Attribute\Source\Boolean',
			'required' => true,
			'default'  => '0',
			'sort_order' => 100,
			'global' => \Magento\Eav\Model\Entity\Attribute\ScopedAttributeInterface::SCOPE_STORE,
			'group' => 'Display Settings',
			]
		);
		$installer->endSetup();
		}
	}
}